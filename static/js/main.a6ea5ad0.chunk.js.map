{"version":3,"sources":["assets/img/remove.svg","components/Badge/index.jsx","components/List/index.jsx","assets/img/close.svg","components/AddList/index.jsx","assets/img/add.svg","components/Tasks/AddTaskForm.jsx","components/Tasks/Task.jsx","assets/img/edit.svg","components/Tasks/index.jsx","App.js","index.js"],"names":["Badge","color","onClick","className","classNames","List","items","isRemovable","onRemove","onClickItem","activeItem","map","item","index","active","id","icon","name","tasks","length","window","confirm","axios","delete","then","removeList","src","removeSvg","alt","AddList","colors","onAdd","useState","visiblePopup","setVisiblePopup","inputValue","setInputValue","seletedColor","setSeletedColor","isLoading","setIsLoading","useEffect","Array","isArray","onClose","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","closeSvg","value","onChange","e","target","type","placeholder","post","colorId","data","filter","c","listObj","catch","alert","finally","AddTaskForm","list","onAddTask","visibleForm","setFormVisible","toggleFormVisible","disabled","obj","listId","text","completed","addSvg","Task","onEdit","onComplete","checked","htmlFor","Tasks","onEditTitle","onRemoveTask","onEditTask","onCompleteTask","withoutEmpty","to","style","hex","newTitle","prompt","patch","editSvg","task","App","lists","setLists","setColors","setActiveItem","history","useHistory","location","useLocation","get","taskObj","newList","newTaskText","taskId","onEditListTitle","title","pathname","split","find","Number","push","newLists","exact","path","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.a6ea5ad0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/remove.f5660af3.svg\";","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Badge.scss\";\r\n\r\n// `badge badge--${color}`\r\n\r\nconst Badge = ({ color, onClick, className }) => (\r\n  <i\r\n    onClick={onClick}\r\n    className={classNames(\"badge\", { [`badge--${color}`]: color }, className)}\r\n  ></i>\r\n);\r\n\r\nexport default Badge;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport axios from \"axios\";\r\n\r\nimport removeSvg from \"../../assets/img/remove.svg\";\r\n\r\nimport Badge from \"../Badge\";\r\n\r\nimport \"./List.scss\";\r\n\r\nconst List = ({\r\n  items,\r\n  isRemovable,\r\n  onClick,\r\n  onRemove,\r\n  onClickItem,\r\n  activeItem,\r\n}) => {\r\n  const removeList = (item) => {\r\n    if (window.confirm(\"Are you sure you want to remove?\")) {\r\n      axios.delete(\"https://my-json-server.typicode.com/GapurEvloev/react_todo/lists/\" + item.id).then(() => {\r\n        onRemove(item.id);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul onClick={onClick} className=\"todo__list list\">\r\n      {items.map((item, index) => (\r\n        <li\r\n          key={index}\r\n          className={classNames(\r\n            \"list__item\",\r\n            {\r\n              active: item.active\r\n                ? item.active\r\n                : activeItem && activeItem.id === item.id,\r\n            },\r\n            item.className\r\n          )}\r\n          onClick={onClickItem ? () => onClickItem(item) : null}\r\n        >\r\n          <span className=\"list__item_mark\">\r\n            {item.icon ? item.icon : <Badge color={item.color.name} />}\r\n          </span>\r\n          <span className=\"list__item_name\">{item.name}</span>\r\n          <span className=\"list__item_count\">\r\n            {item.tasks && `(${item.tasks.length})`}\r\n          </span>\r\n          {isRemovable && (\r\n            <img\r\n              onClick={() => removeList(item)}\r\n              className=\"list__remove-icon\"\r\n              src={removeSvg}\r\n              alt=\"Remove\"\r\n            />\r\n          )}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","export default __webpack_public_path__ + \"static/media/close.b83c2023.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport List from \"../List\";\r\nimport Badge from \"../Badge\";\r\n\r\nimport closeSvg from \"../../assets/img/close.svg\";\r\n\r\nimport \"./AddList.scss\";\r\n\r\nconst AddList = ({ colors, onAdd }) => {\r\n  const [visiblePopup, setVisiblePopup] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [seletedColor, setSeletedColor] = useState(3);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(colors)) {\r\n      setSeletedColor(colors[0].id);\r\n    }\r\n  }, [colors]);\r\n\r\n  const onClose = () => {\r\n    setVisiblePopup(false);\r\n    setInputValue(\"\");\r\n    setSeletedColor(colors[0].id);\r\n  };\r\n\r\n  const addList = () => {\r\n    if (!inputValue) {\r\n      alert(\"Enter the name of the list\");\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    axios\r\n      .post(\"https://my-json-server.typicode.com/GapurEvloev/react_todo/lists\", {\r\n        name: inputValue,\r\n        colorId: seletedColor,\r\n      })\r\n      .then(({ data }) => {\r\n        const color = colors.filter((c) => c.id === seletedColor)[0];\r\n        const listObj = { ...data, color, tasks: [] };\r\n        onAdd(listObj);\r\n        onClose();\r\n      })\r\n      .catch(e => {\r\n        alert('Error when adding a list!');\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <List\r\n        onClick={() => setVisiblePopup(true)}\r\n        items={[\r\n          {\r\n            className: \"list__add-button\",\r\n            icon: (\r\n              <svg\r\n                width=\"12\"\r\n                height=\"12\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M8 1V15\"\r\n                  stroke=\"#868686\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n                <path\r\n                  d=\"M1 8H15\"\r\n                  stroke=\"#868686\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </svg>\r\n            ),\r\n            name: \"Add list\",\r\n          },\r\n        ]}\r\n      />\r\n      {visiblePopup && (\r\n        <div className=\"add-list__popup\">\r\n          <img\r\n            onClick={onClose}\r\n            src={closeSvg}\r\n            alt=\"Close button\"\r\n            className=\"add-list__popup-close-btn\"\r\n          />\r\n          <input\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            className=\"field\"\r\n            type=\"text\"\r\n            placeholder=\"Name of the list\"\r\n          />\r\n\r\n          <div className=\"add-list__popup-colors\">\r\n            {colors.map((color) => (\r\n              <Badge\r\n                onClick={() => setSeletedColor(color.id)}\r\n                key={color.id}\r\n                color={color.name}\r\n                className={seletedColor === color.id && \"active\"}\r\n              />\r\n            ))}\r\n          </div>\r\n\r\n          <button onClick={addList} className=\"button\">\r\n            {isLoading ? 'Adding...' : 'Add'}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddList;\r\n","export default __webpack_public_path__ + \"static/media/add.c4fa83e1.svg\";","\r\n   \r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport addSvg from '../../assets/img/add.svg';\r\n\r\nconst AddTaskForm = ({ list, onAddTask }) => {\r\n  const [visibleForm, setFormVisible] = useState(false);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isLoading, setIsLoading] = useState('');\r\n\r\n  const toggleFormVisible = () => {\r\n    setFormVisible(!visibleForm);\r\n    setInputValue('');\r\n  };\r\n\r\n  const addTask = () => {\r\n    const obj = {\r\n      listId: list.id,\r\n      text: inputValue,\r\n      completed: false\r\n    };\r\n    setIsLoading(true);\r\n    axios\r\n      .post('https://my-json-server.typicode.com/GapurEvloev/react_todo/tasks', obj)\r\n      .then(({ data }) => {\r\n        onAddTask(list.id, data);\r\n        toggleFormVisible();\r\n      })\r\n      .catch(e => {\r\n        alert('Error when adding a task!');\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks__form\">\r\n      {!visibleForm ? (\r\n        <div onClick={toggleFormVisible} className=\"tasks__form-new\">\r\n          <img src={addSvg} alt=\"Add icon\" />\r\n          <span>New challenge</span>\r\n        </div>\r\n      ) : (\r\n        <div className=\"tasks__form-block\">\r\n          <input\r\n            value={inputValue}\r\n            className=\"field\"\r\n            type=\"text\"\r\n            placeholder=\"Task text\"\r\n            onChange={e => setInputValue(e.target.value)}\r\n          />\r\n          <button disabled={isLoading} onClick={addTask} className=\"button\">\r\n            {isLoading ? 'Adding...' : 'Add task'}\r\n          </button>\r\n          <button onClick={toggleFormVisible} className=\"button button--grey\">\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;","import React from 'react';\r\n\r\nconst Task = ({ id, text, completed, list, onRemove, onEdit, onComplete }) => {\r\n  const onChangeCheckbox = e => {\r\n    onComplete(list.id, id, e.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div key={id} className=\"tasks__items-row\">\r\n      <div className=\"checkbox\">\r\n        <input\r\n          onChange={onChangeCheckbox}\r\n          id={`task-${id}`}\r\n          type=\"checkbox\"\r\n          checked={completed}\r\n        />\r\n        <label htmlFor={`task-${id}`}>\r\n          <svg\r\n            width=\"11\"\r\n            height=\"8\"\r\n            viewBox=\"0 0 11 8\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\"\r\n              stroke=\"#000\"\r\n              strokeWidth=\"1.5\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            />\r\n          </svg>\r\n        </label>\r\n      </div>\r\n      <p>{text}</p>\r\n      <div className=\"tasks__items-row-actions\">\r\n        <div onClick={() => onEdit(list.id, { id, text })}>\r\n          <svg\r\n            width=\"15\"\r\n            height=\"15\"\r\n            viewBox=\"0 0 15 15\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M0 12.0504V14.5834C0 14.8167 0.183308 15 0.41661 15H2.9496C3.05792 15 3.16624 14.9583 3.24123 14.875L12.34 5.78458L9.21542 2.66001L0.124983 11.7504C0.0416611 11.8338 0 11.9337 0 12.0504ZM14.7563 3.36825C14.8336 3.29116 14.8949 3.1996 14.9367 3.0988C14.9785 2.99801 15 2.88995 15 2.78083C15 2.6717 14.9785 2.56365 14.9367 2.46285C14.8949 2.36205 14.8336 2.27049 14.7563 2.19341L12.8066 0.24367C12.7295 0.166428 12.638 0.105146 12.5372 0.0633343C12.4364 0.021522 12.3283 0 12.2192 0C12.1101 0 12.002 0.021522 11.9012 0.0633343C11.8004 0.105146 11.7088 0.166428 11.6318 0.24367L10.107 1.76846L13.2315 4.89304L14.7563 3.36825V3.36825Z\"\r\n              fill=\"black\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <div onClick={() => onRemove(list.id, id)}>\r\n          <svg\r\n            width=\"11\"\r\n            height=\"11\"\r\n            viewBox=\"0 0 11 11\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M6.87215 5.5L10.7129 1.65926C10.8952 1.47731 10.9977 1.23039 10.9979 0.972832C10.9982 0.715276 10.8961 0.468178 10.7141 0.285898C10.5321 0.103617 10.2852 0.00108525 10.0277 0.000857792C9.77011 0.000630336 9.52302 0.102726 9.34074 0.284685L5.5 4.12542L1.65926 0.284685C1.47698 0.102404 1.22976 0 0.971974 0C0.714191 0 0.466965 0.102404 0.284685 0.284685C0.102404 0.466965 0 0.714191 0 0.971974C0 1.22976 0.102404 1.47698 0.284685 1.65926L4.12542 5.5L0.284685 9.34074C0.102404 9.52302 0 9.77024 0 10.028C0 10.2858 0.102404 10.533 0.284685 10.7153C0.466965 10.8976 0.714191 11 0.971974 11C1.22976 11 1.47698 10.8976 1.65926 10.7153L5.5 6.87458L9.34074 10.7153C9.52302 10.8976 9.77024 11 10.028 11C10.2858 11 10.533 10.8976 10.7153 10.7153C10.8976 10.533 11 10.2858 11 10.028C11 9.77024 10.8976 9.52302 10.7153 9.34074L6.87215 5.5Z\"\r\n              fill=\"black\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;","export default __webpack_public_path__ + \"static/media/edit.1bda04de.svg\";","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport AddTaskForm from \"./AddTaskForm\";\r\nimport Task from './Task';\r\n\r\nimport editSvg from \"../../assets/img/edit.svg\";\r\n\r\nimport \"./Tasks.scss\";\r\n\r\nconst Tasks = ({ \r\n  list,\r\n  onEditTitle,\r\n  onAddTask,\r\n  onRemoveTask,\r\n  onEditTask,\r\n  onCompleteTask,\r\n  withoutEmpty \r\n}) => {\r\n  const editTitle = () => {\r\n    const newTitle = window.prompt(\"Name of the list\", list.name);\r\n    if (newTitle) {\r\n      onEditTitle(list.id, newTitle);\r\n      axios\r\n        .patch(\"https://my-json-server.typicode.com/GapurEvloev/react_todo/lists/\" + list.id, {\r\n          name: newTitle,\r\n        })\r\n        .catch(() => {\r\n          alert(\"Failed to update name of the list\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks\">\r\n      <Link to={`/lists/${list.id}`}>\r\n        <h2 style={{ color: list.color.hex }} className=\"tasks__title\">\r\n          {list.name}\r\n          <img onClick={editTitle} src={editSvg} alt=\"Edit\" />\r\n        </h2>\r\n      </Link>\r\n\r\n      <div className=\"tasks__items\">\r\n        {!withoutEmpty && list.tasks && !list.tasks.length && (\r\n          <h2>There are no tasks</h2>\r\n        )}\r\n        {list.tasks &&\r\n          list.tasks.map(task => (\r\n            <Task\r\n              key={task.id}\r\n              list={list}\r\n              onEdit={onEditTask}\r\n              onRemove={onRemoveTask}\r\n              onComplete={onCompleteTask}\r\n              {...task}\r\n            />\r\n          ))}\r\n        <AddTaskForm key={list.id} list={list} onAddTask={onAddTask} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Route, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { List, AddList, Tasks } from \"./components\";\r\n\r\nfunction App() {\r\n  const [lists, setLists] = useState(null);\r\n  const [colors, setColors] = useState(null);\r\n  const [activeItem, setActiveItem] = useState(null);\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://my-json-server.typicode.com/GapurEvloev/react_todo/lists?_expand=color&_embed=tasks\")\r\n      .then(({ data }) => {\r\n        setLists(data);\r\n      });\r\n    axios.get(\"https://my-json-server.typicode.com/GapurEvloev/react_todo/colors\").then(({ data }) => {\r\n      setColors(data);\r\n    });\r\n  }, []);\r\n\r\n  const onAddList = (obj) => {\r\n    const newList = [...lists, obj];\r\n    setLists(newList);\r\n  };\r\n\r\n  const onAddTask = (listId, taskObj) => {\r\n    const newList = lists.map((item) => {\r\n      if (item.id === listId) {\r\n        item.tasks = [...item.tasks, taskObj];\r\n      }\r\n      return item;\r\n    });\r\n    setLists(newList);\r\n  };\r\n\r\n  const onEditTask = (listId, taskObj) => {\r\n    const newTaskText = window.prompt('Task text', taskObj.text);\r\n\r\n    if (!newTaskText) {\r\n      return;\r\n    }\r\n\r\n    const newList = lists.map(list => {\r\n      if (list.id === listId) {\r\n        list.tasks = list.tasks.map(task => {\r\n          if (task.id === taskObj.id) {\r\n            task.text = newTaskText;\r\n          }\r\n          return task;\r\n        });\r\n      }\r\n      return list;\r\n    });\r\n    setLists(newList);\r\n    axios\r\n      .patch('https://my-json-server.typicode.com/GapurEvloev/react_todo/tasks/' + taskObj.id, {\r\n        text: newTaskText\r\n      })\r\n      .catch(() => {\r\n        alert('Task update failed');\r\n      });\r\n  };\r\n\r\n  const onRemoveTask = (listId, taskId) => {\r\n    if (window.confirm('Do you really want to delete the task?')) {\r\n      const newList = lists.map(item => {\r\n        if (item.id === listId) {\r\n          item.tasks = item.tasks.filter(task => task.id !== taskId);\r\n        }\r\n        return item;\r\n      });\r\n      setLists(newList);\r\n      axios.delete('https://my-json-server.typicode.com/GapurEvloev/react_todo/tasks/' + taskId).catch(() => {\r\n        alert('Failed to delete task');\r\n      });\r\n    }\r\n  };\r\n\r\n  const onCompleteTask = (listId, taskId, completed) => {\r\n    const newList = lists.map(list => {\r\n      if (list.id === listId) {\r\n        list.tasks = list.tasks.map(task => {\r\n          if (task.id === taskId) {\r\n            task.completed = completed;\r\n          }\r\n          return task;\r\n        });\r\n      }\r\n      return list;\r\n    });\r\n    setLists(newList);\r\n    axios\r\n      .patch('https://my-json-server.typicode.com/GapurEvloev/react_todo/tasks/' + taskId, {\r\n        completed\r\n      })\r\n      .catch(() => {\r\n        alert('Task update failed');\r\n      });\r\n  };\r\n\r\n  const onEditListTitle = (id, title) => {\r\n    const newList = lists.map((list) => {\r\n      if (list.id === id) {\r\n        list.name = title;\r\n      }\r\n      return list;\r\n    });\r\n    setLists(newList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const listId = location.pathname.split('lists/')[1];\r\n    if (lists) {\r\n      const list = lists.find(list => list.id === Number(listId));\r\n      setActiveItem(list);\r\n    }\r\n  }, [lists, location.pathname]);\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <div className=\"todo__sidebar\">\r\n        <List\r\n          onClickItem={list => {\r\n            history.push(`/`);\r\n          }}\r\n          items={[\r\n            {\r\n              active: location.pathname === '/',\r\n              icon: (\r\n                <svg\r\n                  className=\"list__item_icon\"\r\n                  width=\"18\"\r\n                  height=\"18\"\r\n                  viewBox=\"0 0 18 18\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M12.96 8.10001H7.74001C7.24321 8.10001 7.20001 8.50231 7.20001 9.00001C7.20001 9.49771 7.24321 9.90001 7.74001 9.90001H12.96C13.4568 9.90001 13.5 9.49771 13.5 9.00001C13.5 8.50231 13.4568 8.10001 12.96 8.10001V8.10001ZM14.76 12.6H7.74001C7.24321 12.6 7.20001 13.0023 7.20001 13.5C7.20001 13.9977 7.24321 14.4 7.74001 14.4H14.76C15.2568 14.4 15.3 13.9977 15.3 13.5C15.3 13.0023 15.2568 12.6 14.76 12.6ZM7.74001 5.40001H14.76C15.2568 5.40001 15.3 4.99771 15.3 4.50001C15.3 4.00231 15.2568 3.60001 14.76 3.60001H7.74001C7.24321 3.60001 7.20001 4.00231 7.20001 4.50001C7.20001 4.99771 7.24321 5.40001 7.74001 5.40001ZM4.86001 8.10001H3.24001C2.74321 8.10001 2.70001 8.50231 2.70001 9.00001C2.70001 9.49771 2.74321 9.90001 3.24001 9.90001H4.86001C5.35681 9.90001 5.40001 9.49771 5.40001 9.00001C5.40001 8.50231 5.35681 8.10001 4.86001 8.10001ZM4.86001 12.6H3.24001C2.74321 12.6 2.70001 13.0023 2.70001 13.5C2.70001 13.9977 2.74321 14.4 3.24001 14.4H4.86001C5.35681 14.4 5.40001 13.9977 5.40001 13.5C5.40001 13.0023 5.35681 12.6 4.86001 12.6ZM4.86001 3.60001H3.24001C2.74321 3.60001 2.70001 4.00231 2.70001 4.50001C2.70001 4.99771 2.74321 5.40001 3.24001 5.40001H4.86001C5.35681 5.40001 5.40001 4.99771 5.40001 4.50001C5.40001 4.00231 5.35681 3.60001 4.86001 3.60001Z\"\r\n                    fill=\"black\"\r\n                  />\r\n                </svg>\r\n              ),\r\n              name: \"All tasks\"\r\n            },\r\n          ]}\r\n        />\r\n        {lists ? (\r\n          <List\r\n            items={lists}\r\n            onRemove={id => {\r\n              const newLists = lists.filter(item => item.id !== id);\r\n              setLists(newLists);\r\n            }}\r\n            onClickItem={list => {\r\n              history.push(`/lists/${list.id}`);\r\n            }}\r\n            activeItem={activeItem}\r\n            isRemovable\r\n          />\r\n        ) : (\r\n          \"Loading...\"\r\n        )}\r\n        <AddList onAdd={onAddList} colors={colors} />\r\n      </div>\r\n      <div className=\"todo__tasks\">\r\n        <Route exact path=\"/\">\r\n          {lists &&\r\n            lists.map(list => (\r\n              <Tasks\r\n                key={list.id}\r\n                list={list}\r\n                onAddTask={onAddTask}\r\n                onEditTitle={onEditListTitle}\r\n                onRemoveTask={onRemoveTask}\r\n                onEditTask={onEditTask}\r\n                onCompleteTask={onCompleteTask}\r\n                withoutEmpty\r\n              />\r\n            ))}\r\n        </Route>\r\n        <Route path=\"/lists/:id\">\r\n          {lists && activeItem && (\r\n            <Tasks\r\n              list={activeItem}\r\n              onAddTask={onAddTask}\r\n              onEditTitle={onEditListTitle}\r\n              onRemoveTask={onRemoveTask}\r\n              onEditTask={onEditTask}\r\n              onCompleteTask={onCompleteTask}\r\n            />\r\n          )}\r\n        </Route>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <Router basename={`/${\"react_todo\"}/`}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}